# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class Medecin(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, id: str=None, nom: str=None, tel: int=None, specialite: str=None):  # noqa: E501
        """Medecin - a model defined in Swagger

        :param id: The id of this Medecin.  # noqa: E501
        :type id: str
        :param nom: The nom of this Medecin.  # noqa: E501
        :type nom: str
        :param tel: The tel of this Medecin.  # noqa: E501
        :type tel: int
        :param specialite: The specialite of this Medecin.  # noqa: E501
        :type specialite: str
        """
        self.swagger_types = {
            'id': str,
            'nom': str,
            'tel': int,
            'specialite': str
        }

        self.attribute_map = {
            'id': 'id',
            'nom': 'nom',
            'tel': 'tel',
            'specialite': 'specialite'
        }
        self._id = id
        self._nom = nom
        self._tel = tel
        self._specialite = specialite

    @classmethod
    def from_dict(cls, dikt) -> 'Medecin':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Medecin of this Medecin.  # noqa: E501
        :rtype: Medecin
        """
        return util.deserialize_model(dikt, cls)

    @property
    def id(self) -> str:
        """Gets the id of this Medecin.


        :return: The id of this Medecin.
        :rtype: str
        """
        return self._id

    @id.setter
    def id(self, id: str):
        """Sets the id of this Medecin.


        :param id: The id of this Medecin.
        :type id: str
        """

        self._id = id

    @property
    def nom(self) -> str:
        """Gets the nom of this Medecin.


        :return: The nom of this Medecin.
        :rtype: str
        """
        return self._nom

    @nom.setter
    def nom(self, nom: str):
        """Sets the nom of this Medecin.


        :param nom: The nom of this Medecin.
        :type nom: str
        """

        self._nom = nom

    @property
    def tel(self) -> int:
        """Gets the tel of this Medecin.


        :return: The tel of this Medecin.
        :rtype: int
        """
        return self._tel

    @tel.setter
    def tel(self, tel: int):
        """Sets the tel of this Medecin.


        :param tel: The tel of this Medecin.
        :type tel: int
        """

        self._tel = tel

    @property
    def specialite(self) -> str:
        """Gets the specialite of this Medecin.


        :return: The specialite of this Medecin.
        :rtype: str
        """
        return self._specialite

    @specialite.setter
    def specialite(self, specialite: str):
        """Sets the specialite of this Medecin.


        :param specialite: The specialite of this Medecin.
        :type specialite: str
        """

        self._specialite = specialite
