# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class PharmacieLocalisation(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, type: str=None, coordinates: List[int]=None, geometries: str=None):  # noqa: E501
        """PharmacieLocalisation - a model defined in Swagger

        :param type: The type of this PharmacieLocalisation.  # noqa: E501
        :type type: str
        :param coordinates: The coordinates of this PharmacieLocalisation.  # noqa: E501
        :type coordinates: List[int]
        :param geometries: The geometries of this PharmacieLocalisation.  # noqa: E501
        :type geometries: str
        """
        self.swagger_types = {
            'type': str,
            'coordinates': List[int],
            'geometries': str
        }

        self.attribute_map = {
            'type': 'type',
            'coordinates': 'coordinates',
            'geometries': 'geometries'
        }
        self._type = type
        self._coordinates = coordinates
        self._geometries = geometries

    @classmethod
    def from_dict(cls, dikt) -> 'PharmacieLocalisation':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The Pharmacie_localisation of this PharmacieLocalisation.  # noqa: E501
        :rtype: PharmacieLocalisation
        """
        return util.deserialize_model(dikt, cls)

    @property
    def type(self) -> str:
        """Gets the type of this PharmacieLocalisation.


        :return: The type of this PharmacieLocalisation.
        :rtype: str
        """
        return self._type

    @type.setter
    def type(self, type: str):
        """Sets the type of this PharmacieLocalisation.


        :param type: The type of this PharmacieLocalisation.
        :type type: str
        """

        self._type = type

    @property
    def coordinates(self) -> List[int]:
        """Gets the coordinates of this PharmacieLocalisation.


        :return: The coordinates of this PharmacieLocalisation.
        :rtype: List[int]
        """
        return self._coordinates

    @coordinates.setter
    def coordinates(self, coordinates: List[int]):
        """Sets the coordinates of this PharmacieLocalisation.


        :param coordinates: The coordinates of this PharmacieLocalisation.
        :type coordinates: List[int]
        """

        self._coordinates = coordinates

    @property
    def geometries(self) -> str:
        """Gets the geometries of this PharmacieLocalisation.


        :return: The geometries of this PharmacieLocalisation.
        :rtype: str
        """
        return self._geometries

    @geometries.setter
    def geometries(self, geometries: str):
        """Sets the geometries of this PharmacieLocalisation.


        :param geometries: The geometries of this PharmacieLocalisation.
        :type geometries: str
        """

        self._geometries = geometries
